#!/bin/zsh

set -e

# Script can take an optional path in which to check, and the --force flag to run all linters regardless of changes

# Parse --all and optional path (can be path --all or --all path)

function get_changed_files {
    extension=$1
    git diff --name-only --diff-filter=ACMRTUXB --relative . | grep -E "\.$extension$"
}

function lint_python_files {
    all=$1
    result=0

    if [ "$all" = true ]; then
        echo "Running all linters"
        black .
        result=$(($result + $?))
        isort .
        result=$(($result + $?))
        flake8 .
        result=$(($result + $?))
    else
        changed_files=$(get_changed_files py)
        if [ -n "$changed_files" ]; then
        # $changed_files is a list separated by newlines, so we'll use zsh's array splitting to pass each file as a separate argument
        changed_files=(${(f)changed_files})

        # no quoting this variable, we actually *need* the whitespace separation here!
        black $changed_files
        result=$(($result + $?))
        isort $changed_files
        result=$(($result + $?))
        flake8 $changed_files
        result=$(($result + $?))
        fi
    fi
    return result
}

function lint_html_files {
    all=$1
    result=0

    if [ "$all" = true ]; then
        changed_files="$(find . -name '*.html' -not -path '*/vendored/*' -not -path '*/node_modules/*' -not -path '*dist/*' -not -path '*/local/*' -print)"
    else
        changed_files="$(get_changed_files html)"
    fi

    if [ -n "$changed_files" ]; then
        # $changed_files is a list separated by newlines, so we'll use zsh's array splitting to pass each file as a separate argument
        changed_files=(${(f)changed_files})
        # no quoting this variable, we actually *need* the whitespace separation here!
        djhtml $changed_files
        result=$(($result + $?))
    fi
    return result
}

function lint_prettier_files {
    all=$1
    extension=$2
    tabwidth=$3
    result=0
    if [ "$all" = true ]; then
        changed_files="$(find . -name "*.$extension" -not -path '*/vendored/*' -not -path '*/node_modules/*' -not -path '*/local/*' -not -path '*dist/*' -not -path "*.min.$extension" -not -path '*/pretalx-schedule.js' -not -path '*flags.scss' -print)"
    else
        changed_files="$(get_changed_files $extension)"
    fi
    if [ -n "$changed_files" ]; then
        # $changed_files is a list separated by newlines, so we'll use zsh's array splitting to pass each file as a separate argument
        changed_files=(${(f)changed_files})
        # no quoting this variable, we actually *need* the whitespace separation here!
        prettier -w --no-semi --tab-width=$tabwidth $changed_files | grep -v unchanged
        result=$(($result + $?))
    fi
    return result
}

function lint_js_files {
    lint_prettier_files $1 js 4
}

function lint_css_files {
    lint_prettier_files $1 css 2
    lint_prettier_files $1 scss 2
}


if [ "$1" = "--all" ]; then
    all=true
    patharg=$2
elif [ "$2" = "--all" ]; then
    all=true
    patharg=$1
else
    # We also set all=true if there are no changed files at all
    if [ -n get_changed_files ]; then
        all=true
    else
        all=false
    fi
    patharg=$1
fi

# Change to the path if given
if [ -n "$patharg" ]; then
    cd "$patharg"
fi

set +e

lint_python_files $all
lint_html_files $all
lint_css_files $all
# lint_js_files $all

# result=0
# result=$((result+$(lint_python_files $all)))
# result=$((result+$(lint_html_files $all)))
# result=$((result+$(lint_css_files $all)))
# result=$((result+$(lint_js_files $all)))

# exit $result
exit 0
