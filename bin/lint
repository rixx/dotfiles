#!/bin/zsh

set -e

# Script can take an optional path in which to check, and the --force flag to run all linters regardless of changes

# Parse --all and optional path (can be path --all or --all path)

if [ "$1" = "--all" ]; then
    all=true
    patharg=$2
elif [ "$2" = "--all" ]; then
    all=true
    patharg=$1
else
    all=false
    patharg=$1
fi

# Change to the path if given
if [ -n "$patharg" ]; then
    cd $patharg
fi

# If we are running all linters, run them all and exit with 1 if any fail
if [ "$all" = true ]; then
    set +e
    result=0

    black .
    result=$(($result + $?))
    isort .
    result=$(($result + $?))
    flake8 .
    result=$(($result + $?))
    djhtml .
    result=$(($result + $?))
    exit $result
fi

# Check if the git repo has changed files relevant to us
changed_files=$(git diff --name-only --diff-filter=ACMRTUXB --relative . | grep -E '\.py$')

set +e
result=0

if [ -n "$changed_files" ]; then
    # Run the linters on the changed files
    # $changed_files is a list separated by newlines, so we'll use zsh's array splitting to pass each file as a separate argument
    changed_files=(${(f)changed_files})

    black $changed_files
    result=$(($result + $?))
    isort $changed_files
    result=$(($result + $?))
    flake8 $changed_files
    result=$(($result + $?))
fi

changed_files=$(git diff --name-only --diff-filter=ACMRTUXB --relative | grep -E '\.html$')
if [ -n "$changed_files" ]; then
    changed_files=(${(f)changed_files})
    djhtml $changed_files
    result=$(($result + $?))
fi

exit $result
